<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.airtnt.airtnt.service.HostMapper">
	<!-- 숙소 가져오기(update 페이지에서 사용) -->
	<resultMap type="propertyDTO" id="getPropertyMap">
		<id property="id" column="id"/>
		<result property="hostId" column="host_id"/>
		<result property="name" column="name"/>
		<result property="propertyDesc" column="property_desc"/>
		<result property="address" column="address"/>
		<result property="price" column="price"/>
		<result property="bedCount" column="bed_count"/>
		<result property="maxGuest" column="max_guest"/>
		<result property="regDate" column="reg_date"/>
		<result property="modDate" column="mod_date"/>
		<result property="roomTypeId" column="room_type_id"/>
		<result property="subPropertyTypeId" column="sub_property_type_id"/>
		<result property="roomTypeName" column="room_name"/>
		<result property="subPropertyTypeName" column="sub_name"/>
		
		
		<association property="subPropertyType"
			columnPrefix="sub_property_type_" resultMap="subPropertyTypeMap"/>
		<association property="roomType"
			columnPrefix="room_type_" resultMap="roomTypeMap"/>
		<collection property="amenityTypes" ofType="amenityTypeDTO"
			columnPrefix="amenity_" resultMap="amenityMap" />
		<collection property="images" ofType="imageDTO"
			columnPrefix="image_" resultMap="imageMap"/>
	</resultMap>
	<!-- // -->
	<!-- 숙소 특성 -->
	<!-- <select id="getPropertyInfo" resultMap="propertyInfoMap">
		SELECT 
		s.id AS sub_property_type_  id
		 FROM 
		property_type p, sub_property_type s, room_type r, amenity_type a
	</select>
	
	<resultMap type="PropertyInformationDTO" id="propertyInfoMap">
		
		<collection property="listPropertyType" ofType="propertyTypeDTO"
			columnPrefix="property_type_" resultMap="propertyTypeMap"/>
			
		<collection property="listSubPropertyType" ofType="subPropertyTypeDTO"
			columnPrefix="sub_property_type_" resultMap="subPropertyTypeMap"/>
		
		<collection property="listRoomType" ofType="roomTypeDTO"
			columnPrefix="room_type_" resultMap="roomTypeMap"/>
		
		<collection property="listAmenityType" ofType="amenityTypeDTO"
			columnPrefix="amenity_" resultMap="amenityMap" />
	</resultMap> -->
	<!-- // -->

	<resultMap type="amenityTypeDTO" id="amenityMap">
		<id property="id" column="id"/>
		<result property="propertyId" column="property_id"/>
		<result property="amenityTypeId" column="amenity_type_id"/>
		<result property="name" column="name"/>
		<result property="isUse" column="is_use"/>
	</resultMap>
	
	<resultMap type="imageDTO" id="imageMap">
		<id property="id" column="id"/>
		<result property="propertyId" column="property_id"/>
		<result property="isMain" column="is_main"/>
		<result property="path" column="path"/>
		<result property="fileSize" column="file_size"/>
	</resultMap>
	
	<resultMap type="propertyTypeDTO" id="propertyTypeMap">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="isUse" column="is_use"/>
	</resultMap>
	
	<resultMap type="subPropertyTypeDTO" id="subPropertyTypeMap">
		<id property="id" column="id"/>
		<result property="propertyTypeId" column="property_type_id"/>
		<result property="name" column="name"/>
		<result property="isUse" column="is_use"/>
	</resultMap>
	
	<resultMap type="roomTypeDTO" id="roomTypeMap">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="isUse" column="is_use"/>
	</resultMap>


	<select id="getListPropertyType" resultType="propertyTypeDTO">
		SELECT 
			id, name, is_use AS isUse
		FROM property_type
	</select>
	<select id="getListSubPropertyType" resultType="subPropertyTypeDTO">
		SELECT 
			id, name, property_type_id AS propertyTypeId, is_use AS isUse
		FROM sub_property_type
	</select>
	<select id="getListRoomType" resultType="roomTypeDTO">
		SELECT 
			id, name, is_use AS isUse
		FROM room_type
	</select>
	<select id="getListAmenityType" resultType="amenityTypeDTO">
		SELECT 
			id, name, is_use AS isUse
		FROM amenity_type
	</select>

	<select id="getGuideList" resultType="GuideDTO">
		SELECT
		id, subject,
		reg_date AS regDate,
		mod_date AS modDate,
		explanation FROM guide
	</select>

	<select id="getGuide" parameterType="int" resultType="guideDTO">
		SELECT
		id, subject,
		reg_date AS regDate,
		mod_date AS modDate,
		explanation
		FROM guide
		WHERE id = #{id}
	</select>
	
	<select id="listProperty" parameterType="String" resultMap="getPropertyMap">
		SELECT
		p.id, p.name,
		p.host_id,
		p.address, p.price,
		p.property_desc,
		p.bed_count,
		p.max_guest,
		p.reg_date,
		p.mod_date,
		p.room_type_id,
		r.name AS room_name,
		p.sub_property_type_id,
		s.name AS sub_name,
		i.path AS image_path, 
		i.is_main AS image_is_main,
		a.amenity_property_id,
		a.amenity_name,
		a.amenity_id
		FROM property p
		LEFT JOIN sub_property_type s
			ON p.sub_property_type_id = s.id
		LEFT JOIN room_type	r
			ON p.room_type_id = r.id
		LEFT JOIN image i
			ON p.id = i.property_id
		LEFT JOIN (
			SELECT 
			at.name AS amenity_name,
			at.id AS amenity_id,
			am.property_id AS amenity_property_id
			FROM amenity_type at
			LEFT JOIN amenity am
				ON am.property_id = at.id
			) a
			ON a.amenity_property_id = p.id
		WHERE p.host_id = #{hostId}
	</select>
	

	<insert id="insertProperty" parameterType="PropertyInformationDTO">
		INSERT INTO property
		(id, name, host_id, property_desc, property_type_id,
		sub_property_type_id, room_type_id, address, price, bed_count, max_guest, latitude, longitude)
		VALUES(seq_property_id.nextval,#{name}, #{hostId}, #{description},
		#{propertyTypeId}, #{subPropertyTypeId}, #{roomTypeId}, #{address},
		#{price}, #{bedCount}, #{maxGuest}, #{latitude}, #{longitude})<!-- modeDate==null -->
	</insert>
	
	<update id="updateProperty" parameterType="PropertyDTO">
		UPDATE property
		SET 
		max_guest =#{maxGuest}, bed_count = #{bedCount}, 
		property_desc = #{propertyDesc}, price = #{price}
		WHERE id = #{id}
	</update>

	<delete id="deleteProperty" parameterType="int">
	 DELETE FROM 
	 property 
	 WHERE id = #{propertyId}
		<!-- {	
			CALL
        	DECLARE
        	BEGIN
         	   DELETE FROM property WHERE id = #{propertyId};
         	   DELETE FROM amenity WHERE property_id = #{propertyId};
         	   DELETE FROM image WHERE property_id = #{propertyId};
         	   DELETE FROM wishlist_property WHERE property_id = #{propertyId};
         	   DELETE FROM review WHERE property_id = #{propertyId};
         	   DELETE FROM booking WHERE property_id = #{propertyId};
      	  	END
    	} -->
	</delete>
	
	<update id="propertyBookingDelete" parameterType="int">
		UPDATE booking
		SET
		booking_number = -1
		WHERE property_id = #{propertyId}
	</update>

	<select id="propertyType" resultType="propertyTypeDTO">
		SELECT
		id, name,
		is_use AS isUse,
		reg_date AS regDate,
		mod_date AS modDate
		FROM property_type ORDER BY id
	</select>

	<select id="listBooking" parameterType="String" resultType="BookingDTO">
		SELECT
		b.id,
		b.property_id AS propertyId,
		b.guest_id AS guestId,
		b.host_id AS hostId,
		b.guest_count AS guestCount,
		b.day_count AS dayCount,
		b.total_price AS totalPrice,
		b.booking_number AS bookingNumber,
		b.check_in_date AS checkInDate,
		b.check_out_date AS checkOutDate,
		b.confirm_date AS confirmDate,
		b.reg_date AS regDate,
		b.mod_date AS modDate,
		m.name AS guestName,
		m.email AS guestEmail,
		p.name AS propertyName,
		t.pay_expt_date AS payExptDate,
		t.is_refund AS isRefund
		FROM booking b
		LEFT JOIN member m 
			ON b.guest_id = m.id
		LEFT JOIN property p
			ON b.property_id = p.id
		LEFT JOIN transaction t
			ON b.id = t.booking_id
		WHERE b.host_id = #{hostId}
		
	</select>
	
	<select id="getMemberDTO" parameterType="String"
		resultType="MemberDTO">
		SELECT * FROM member WHERE id = #{memberId};
	</select>
	<!-- <resultMap type="propertyDTO" id="propertyMap">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="propertyDesc" column="property_desc"/>
		<result property="address" column="address"/>
		<result property="latitude" column="latitude"/>
		<result property="longitude" column="longitude"/>
		<result property="price" column="price"/>
		<result property="bedCount" column="bed_count"/>
		<result property="maxGuest" column="max_guest"/>
		<result property="regDate" column="reg_date"/>
		<result property="modDate" column="mod_date"/>
		
		<collection property="amenityTypes" ofType="amenityTypeDTO"
			columnPrefix="amenity_type_" resultMap="amenityTypeMap" />
			
		<collection property="images" ofType="imageDTO"
			columnPrefix="image_" resultMap="imageMap"/>
	</resultMap>
	
	<resultMap type="amenityTypeDTO" id="propertyAmenityMap">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="propertyId" column="property_id"/>
		<result property="amenityTypeId" column="amenity_type_id"/>
		<result property="isUse" column="is_use"/>
	</resultMap>
	
	<resultMap type="roomTypeDTO" id="roomTypeMap">
		<result property="name" column="name"/>
	</resultMap>
	
	<resultMap type="imageDTO" id="imageMap">
		<result property="propertyId" column="property_id"/>
		<result property="isMain" column="is_main"/>
		<result property="path" column="path"/>
	</resultMap> -->
	
	
	<select id="listTransaction" parameterType="String"
		resultType="TransactionDTO">
		SELECT
		b.host_id AS hostId,
		b.total_price AS totalPrice,
		b.confirm_date AS confirmDate,
		b.property_id AS propertyId,
		b.booking_number AS bookingNumber,
		b.check_out_date AS checkOutDate,
		t.id,
		t.booking_id AS bookingId,
		t.is_refund AS isReFund,
		t.site_fee AS siteFee,
		t.pay_expt_date AS payExptDate,
		p.name AS propertyName
		FROM transaction t
		LEFT JOIN booking b
			ON b.id = t.booking_id
		LEFT JOIN property p
			ON p.id = b.property_id
		WHERE b.host_id = #{hostId}
	</select>

	<select id="totalEarningList" parameterType="String" resultType="TransactionDTO">
		SELECT
		b.total_price AS totalPrice,
		t.site_fee AS siteFee,
		t.is_refund AS isRefund,
		t.pay_expt_date AS payExptDate
		FROM booking b
		LEFT JOIN transaction t
			ON b.id = t.id
		WHERE sysdate > t.pay_expt_date
		AND host_id = #{hostId}
	</select>
	
	<select id="getProperty" parameterType="int" resultMap="getPropertyMap">
		SELECT
		*
		FROM property p
		LEFT JOIN sub_property_type s
			ON p.sub_property_type_id = s.id
		LEFT JOIN room_type r
			ON p.room_type_id = r.id
		LEFT JOIN image i
			ON p.id = i.property_id
		WHERE p.id = #{propertyId}
	</select>

	<select id="getPropertyImage" parameterType="int" resultType="imageDTO">
		SELECT 
			property_id as propertyId,
			is_main as isMain,
			path
		FROM image 
		WHERE property_id = #{propertyId}
	</select>
	
	<select id="getAmenityList" parameterType="int" resultType="amenityTypeDTO">
		SELECT 
			am.property_id as propertyId,
			am.amenity_type_id as amenityTypeId,
			at.id as a_id,
			at.name,
			at.is_use as isUse
		FROM amenity am
		RIGHT JOIN amenity_type at 
			ON at.id = am.amenity_type_id
		WHERE property_id = #{propertyId}
	</select>
	
	<select id="getSysdate" resultType="java.sql.Date">
		select sysdate from dual
	</select>
	<select id="listAmenityType" resultType="AmenityTypeDTO">
		select
		id, name,
		is_use as isUse
		from amenity_type
	</select>


	<select id="updateMemberMode" resultType="int"
		parameterType="String">
		update member set member_mode= '2' where id=#{hostId}
	</select>

	<select id="getGuideContext" resultType="GuideContextDTO"
		parameterType="int">
		select
		id,
		guide_id as guideId,
		context,
		reg_date as
		regDate,
		mod_date as modeDate
		from guide_context
		where
		guide_id=#{guideId}
	</select>

	<select id="getReviewList" resultType="ReviewDTO"
		parameterType="int">
		SELECT
		r.*,
		b.id as b_id,
		b.check_in_date,
		b.check_out_date,
		b.total_price as price,
		p.id as p_id,
		p.name
		FROM review
		r, booking b, property p
		WHERE r.property_id = #{propertyId}
		AND
		r.booking_id = b.id
		AND r.property_id = p.id
	</select>
	
	<resultMap type="java.util.Map" id="selectMap">
		<result column="reviewCount" property="reviewCount" />
		<result column="bookingCount" property="bookingCount" />
		<result column="avg" property="ratingAvg"/>
	</resultMap>

	<select id="getReviewWritingRate" resultMap="selectMap" parameterType="int">
		SELECT
		r.reviewCount,
		b.bookingCount,
		a.avg
		FROM
		(SELECT NVL(count(*),0)
		AS reviewCount
		FROM review
		WHERE property_id = #{propertyId}
		AND sysdate > reg_date) r,
		(SELECT NVL(count(*),1)
		AS bookingCount
		FROM booking
		WHERE property_id = #{propertyId}
		AND sysdate > reg_date) b,
		(SELECT
		NVL(AVG(rating), 0) AS avg
		FROM review 
		WHERE property_id = #{propertyId}
		) a 
	</select>
	
	<update id="bookConfirm" parameterType="int">
		UPDATE booking SET confirm_date = sysdate WHERE id = #{bookingId}
	</update>
	
	<update id="payExptDateConfirm" parameterType="java.util.Map">
		UPDATE transaction 
		SET pay_expt_date = TO_DATE(#{payExptDate}, 'YYYY-MM-DD') 
		WHERE booking_id = #{bookingId}
	</update>
	
	<!-- 예약거절 -->
	<update id="bookReject" parameterType="int">
		UPDATE booking
		SET 
		booking_number = -1
		WHERE id = #{bookingId}
	</update>
	

	<update id="transactionRefund" parameterType="int">
		UPDATE transaction 
		SET 
		is_refund = 'Y'
		WHERE booking_id = #{bookingId}
	</update>
	
	<!-- <update id="bookingReject" parameterType="int">
		UPDATE transaction t 
		RIGHT JOIN booking b
		ON (b.id = t.booking_id)
		SET 
		t.is_refund = 'Y',
		b.booking_number = -1
		WHERE b.id = #{bookingId}
	</update> -->
	<!--//  -->
		<!-- 숙소 저장 -->
		<!-- <update id="propertyInsert" parameterType="PropertyInformationBean">
		INSERT ALL INTO 
		PROPERTY (id, name, host_id, property_desc, property_type_id,
			sub_property_type_id, room_type_id, address, price, bed_count, max_guest, latitude, longitude)
		VALUES(seq_property_id.nextval,#{name}, #{hostId}, #{propertyDesc},
			#{propertyTypeId}, #{subPropertyTypeId}, #{roomTypeId}, #{address},
			#{price}, #{bedCount}, #{maxGuest}, #{latitude}, #{longitude})
			<foreach item="item" collection="listAmenityInsert" close="SELECT * FROM DUAL" separator=" ">
			INTO 
			AMENITY(id, amenity_type_id, property_id) 
			VALUES(#{item.amenityId}, #{item.id}, #{item.propertyId})
			</foreach>
			<foreach item="item" collection="listImage" close="SELECT * FROM DUAL" separator=" ">
			INTO 
			IMAGE(id, property_id, is_main, path, file_size)
			VALUES(#{item.id}, #{item.propertyId}, #{item.isMain, jdbcType=VARCHAR}, #{item.path}, #{item.fileSize})
			</foreach>
		</update> -->
	<!-- // -->
	<update id="imageInsert" parameterType="java.util.List">
		<foreach item="item" collection="list"  open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">
			INTO image(id, property_id, is_main, path, file_size)
			VALUES(#{item.id}, #{item.propertyId}, #{item.isMain, jdbcType=VARCHAR}, #{item.path}, #{item.fileSize})
		</foreach>
	</update>
	
	<update id="insertListAmenity" parameterType="java.util.List">
		<foreach item="item" collection="list"  open="INSERT ALL" close="SELECT * FROM DUAL" separator=" " >
			INTO AMENITY(id, amenity_type_id, property_id) VALUES(#{item.amenityId}, #{item.id}, #{item.propertyId})	
		</foreach>
	</update>
	
	<select id="getPropertyId" resultType="int">
		SELECT seq_property_id.nextval FROM dual
	</select>
	
	<select id="getAmenitySequence" resultType="int">
		SELECT seq_amenity_id.nextval FROM dual
	</select>

	<select id="getImageSequence" resultType="int">
		SELECT seq_image_id.nextval FROM dual
	</select>

	<update id="reviewAnswer" parameterType="java.util.Map">
		UPDATE review
		SET 
		content_host = #{answer},
		content_host_date = sysdate
		WHERE id = #{reviewId}
	</update>
	
	<select id="getListPropertyImage" resultType="int">
		SELECT seq_image_id.nextval FROM dual
	</select>
	
</mapper>
