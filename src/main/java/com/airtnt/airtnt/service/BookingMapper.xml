<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airtnt.airtnt.service.BookingMapper">
	
	<resultMap type="bookingDTO" id="bookingMap">
		<id property="id" column="id"/>
		<result property="propertyId" column="property_id"/>
		<result property="guestId" column="guest_id"/>
		<result property="hostId" column="host_id"/>
		<result property="guestCount" column="guest_count"/>
		<result property="dayCount" column="day_count"/>
		<result property="totalPrice" column="total_price"/>
		<result property="bookingNumber" column="booking_number"/>
		<result property="checkInDate" column="check_in_date"/>
		<result property="checkOutDate" column="check_out_date"/>
		<result property="confirmDate" column="confirm_date"/>
		<result property="regDate" column="reg_date"/>
		<result property="modDate" column="mod_date"/>
	</resultMap>
	
	<resultMap type="transactionDTO" id="transactionMap">
		<id property="id" column="id"/>
		<result property="bookingId" column="booking_id"/>
		<result property="isRefund" column="is_refund"/>
		<result property="siteFee" column="site_fee"/>
		<result property="payExptDate" column="pay_expt_date"/>
		<result property="regDate" column="reg_date"/>
		<result property="modDate" column="mod_date"/>
	</resultMap>
	
	<!-- 승훈 -->
	
	<select id="getPlanedBooking" resultType="BookingDTO" parameterType="String"> 
		select *
		from booking_view
		where guest_id=#{member_id} and check_out_date > sysdate
	</select>
	<select id="getPreBooking" resultType="BookingDTO" parameterType="String"> 
		select *
		from booking_view
		where guest_id=#{member_id} and sysdate > check_out_date
	</select>
	<select id="getToWriteBooking" resultType="BookingDTO" parameterType="String"> 
		select *
		from booking_view
		where guest_id=#{member_id} and sysdate > check_out_date
	</select>
	
	<!-- 정석 -->
	
	<!-- booking -->
	<!-- 내일보다 늦게 체크아웃 하는 예약을 불러옴 -->
	<select id="selectFutureBookings" parameterType="int" resultMap="bookingMap">
		select * from booking
		where
			property_id=#{propertyId}
			and check_out_date <![CDATA[ > ]]> sysdate+1
		order by check_out_date
	</select>
	
	<select id="selectBookingId" resultType="int">
		select booking_id_seq.nextval from dual
	</select>
	
	<select id="selectOverlapBookings" parameterType="java.util.Map" resultMap="bookingMap">
		select * from booking
		where
			property_id=#{propertyId}
			and
				not(
					<!-- 1. 날짜가 겹치지 않는 이전 예약 -->
					(
						check_in_date <![CDATA[ < ]]> #{checkInDate}
						and
						check_out_date <![CDATA[ <= ]]> #{checkInDate}
					)
					or
					<!-- 2. 날짜가 겹치지 않는 이후 예약 -->
					(
						check_in_date <![CDATA[ >= ]]> #{checkOutDate}
						and
						check_out_date <![CDATA[ > ]]> #{checkOutDate}
					)
				)
	</select>
	
	<insert id="insertBooking" parameterType="bookingDTO">
		insert into booking(
			id,property_id,guest_id,host_id,
			guest_count,day_count,total_price,
			booking_number,
			check_in_date,check_out_date
		)
		values(
			#{id},#{propertyId},#{guestId},#{hostId},
			#{guestCount},#{dayCount},#{totalPrice},
			#{bookingNumber} || booking_number_seq.nextval,
			#{checkInDate},#{checkOutDate}
		)
	</insert>
	
	<select id="selectBooking" parameterType="int" resultMap="bookingMap">
		select * from booking where id=#{bookingId}
	</select>
	
	<delete id="deleteBooking" parameterType="int">
		delete from booking where id=#{bookingId}
	</delete>
	
	<!-- transaction -->
	<select id="selectTransactionId" resultType="int">
		select transaction_id_seq.nextval from dual
	</select>
	
	<insert id="insertTransaction" parameterType="transactionDTO">
		insert into transaction(
			id,booking_id,site_fee
		)
		values(
			#{id},#{bookingId},#{siteFee}
		)
	</insert>
	
	<select id="selectTransaction" parameterType="int" resultMap="transactionMap">
		select * from transaction where id=#{transactionId}
	</select>
 </mapper>