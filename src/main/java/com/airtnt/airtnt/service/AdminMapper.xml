<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.airtnt.airtnt.service.AdminMapper">

	<select id="listDashboard" resultType="dashboardDTO">
		        SELECT  C.CAL as transactionDate,
                NVL(A.TOT_SITE_FEE, 0) as thisTotSiteFee,
                NVL(B.TOT_SITE_FEE, 0)  as lastTotSiteFee
        FROM (
                    SELECT TO_CHAR(TRANSACTION_DATE, 'YYYYMMDD') AS transaction_date
                         , NVL(SUM(SITE_FEES),0) AS tot_site_fee 
                    FROM TRANSACTIONS
                    WHERE TRANSACTION_DATE BETWEEN SYSDATE-7 AND SYSDATE
                    GROUP BY TO_CHAR(TRANSACTION_DATE, 'YYYYMMDD')
                    ORDER BY TRANSACTION_DATE
            ) A, --올해
            (
                    SELECT TO_CHAR(TRANSACTION_DATE+365, 'YYYYMMDD') AS transaction_date
                         , NVL(SUM(SITE_FEES),0) AS tot_site_fee 
                    FROM TRANSACTIONS
                    WHERE TRANSACTION_DATE BETWEEN SYSDATE-7-365 AND SYSDATE-365
                    GROUP BY TO_CHAR(TRANSACTION_DATE+365, 'YYYYMMDD')
                    ORDER BY TRANSACTION_DATE
            ) B, --작년
            (   SELECT TO_CHAR(SYSDATE-6,'YYYYMMDD') + LEVEL - 1 AS CAL
                FROM dual 
                CONNECT BY LEVEL <![CDATA[ <= ]]> TO_CHAR(SYSDATE,'YYYYMMDD') - TO_CHAR(SYSDATE-7,'YYYYMMDD')
            ) C --날짜대상
        WHERE A.TRANSACTION_DATE = B.TRANSACTION_DATE(+) 
        AND C.CAL = A.TRANSACTION_DATE(+)
        ORDER BY C.CAL
	</select>
	
	<select id = "selectRoomTypeList" resultType="roomTypeDTO">
		select 	id,
				name,
			   	is_use as isUse
		from room_type
		order by id
	</select>
	
	<select id = "selectPropertyTypeList" resultType="propertyTypeDTO">
		select 	id,
				name,
			   	is_use as isUse
		from property_type
		order by id
	</select>
	
	<select id = "getSubPropertyType" resultType="subPropertyTypeDTO" parameterType="String">
		select 	id,
		        name,
		        property_type_id as propertyTypeId,
		        (select a.name 
		         from property_type a
		         where a.id = b.property_type_id
		        ) as propertyTypeName,
		        is_use as isUse
		from sub_property_type b
		where property_type_id = #{propertyTypeId}
		order by id
	</select>
	
	<select id = "selectSubPropertyTypeList" resultType="subPropertyTypeDTO" parameterType="String">
		select 	id,
		        name,
		        property_type_id as propertyTypeId,
		        (select a.name 
		         from property_type a
		         where a.id = b.property_type_id
		        ) as propertyTypeName,
		        is_use as isUse
		from sub_property_type b
		where property_type_id = (select min(id) from property_type)
		order by id
	</select>
	
	<select id = "selectAmenityTypeList" resultType="amenityTypeDTO">
		select	id,
				name,
				is_use as isUse
		from amenity_type
		order by id
	</select>
	
	<insert id = "insertRoomTypeDTO" parameterType="roomTypeDTO">
		insert into room_type values ((select nvl(max(id),0)+1 from room_type), #{name}, #{isUse}, sysdate, sysdate)
	</insert>
	
	<update id = "updateRoomTypeDTO" parameterType="roomTypeDTO">
		update room_type 
		set name = #{name},
			is_use = #{isUse}
		where id = #{id}
	</update>
	
	<insert id = "insertAmenityTypeDTO" parameterType="amenityTypeDTO">
		insert into amenity_type values ((select nvl(max(id),0)+1 from amenity_type), #{name}, #{isUse}, sysdate, sysdate)
	</insert>
	
	<update id = "updateAmenityTypeDTO" parameterType="amenityTypeDTO">
		update amenity_type 
		set name = #{name},
			is_use = #{isUse}
		where id = #{id}
	</update>
	
	<insert id = "insertPropertyTypeDTO" parameterType="propertyTypeDTO">
		insert into property_type values ((select nvl(max(id),0)+1 from property_type), #{name}, #{isUse}, sysdate, sysdate)
	</insert>
	
	<update id = "updatePropertyTypeDTO" parameterType="propertyTypeDTO">
		update property_type 
		set name = #{name},
			is_use = #{isUse}
		where id = #{id}
	</update>
	
	<select id= "selectMemberList" resultType="memberDTO" parameterType="String">
		select (CASE WHEN member_mode = 1 THEN 'GUEST'
		            WHEN member_mode = 2 THEN 'HOST'
		       END) AS member_mode
			 , id
			 , name as name
			 , REGEXP_REPLACE(tel, '(.{3})(.+)(.{4})', '\1-\2-\3') as tel
			 , (CASE WHEN gender = '1' THEN '남성'
		            WHEN gender = '2' THEN '여성'
		       END) AS gender
			 , to_char(reg_date,'YYYY-MM-DD') as reg_date
		from member
		where 1=1
		<if test='value!="all"'>
		and member_mode = #{value}
		</if>
		order by reg_date desc
	</select>
	
	<insert id ="insertBoard" parameterType="guideDTO">
		insert into guide values(
			seq_content_id.nextval,
			#{subject},
			#{explanation},
			#{content1},
			#{content2},
			#{content3},
			sysdate,
			sysdate
		)
	</insert>
	
	<select id = "selectBoardList" resultType="guideDTO">
		select id as contentId,
			   subject,
			   reg_date as regDate
		from guide
		order by id desc
	</select>
	
	<select id = "getSelectedBoard" resultType="guideDTO" parameterType="String">
		select id as contentId,
			   subject,
			   explanation,
			   content1,
			   content2,
			   content3
		from guide
		where id = #{contentId}
	</select>
	
	<delete id = "deleteBoard" parameterType="String">
		delete from guide where id = #{id}
	</delete>
	
	<update id = "updateSelectedBoard" parameterType="guideDTO">
		update guide
		set subject = #{subject},
			explanation = #{explanation},
			content1 = #{content1},
			content2 = #{content2},
			content3 = #{content3},
			mod_date = sysdate
		where id = #{contentId}
	</update>
	
</mapper>